plugins {
    id 'com.google.cloud.tools.jib' version '2.6.0'
}

dependencies {
    // Import Modules
    api project(":backend:modules:customer")
    api project(":backend:modules:consultation")

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2 Database
    runtimeOnly 'com.h2database:h2'

    // Open API Definition
    implementation("org.springdoc:springdoc-openapi-ui:1.4.8")

    // Jib

    // Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

bootJar {
    enabled = true
}

// Build locally: Build Image `$ ./gradlew jibDockerBuild` // TODO document
// https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#build-to-docker-daemon

// Deploy locally
// docker run -p 8080:8080 -d --name mini-java fabiankuhn/java-backend-jib

jib {
    from {
        image = 'gcr.io/distroless/java:11'
    }
    to {
        image = 'docker-registry.default.svc:5000/testapp/java-backend-jib' // define image stream/ :port/project/name
        // tags = ['latest', project.ext.versionDocker] // TODO
        auth {
            username = "developer"
            password = "developer"
        }
    }
    container {
        ports = ['8080']
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
    allowInsecureRegistries = true
}
